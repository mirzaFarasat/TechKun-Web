import React, { useRef, useState, useEffect, ReactNode, Fragment } from 'react';

interface ContractingStep {
    icon: ReactNode;
    title: string;
    description: string;
}

function ContractingSteps({
    outerColor,
    innerColor,
    textColor,
    descriptionTextColor,
    heading,
    firstStep,
    secondStep,
    thirdStep
}: {
    outerColor: string;
    innerColor: string;
    textColor: string;
    descriptionTextColor: string;
    heading: string;
    firstStep: ContractingStep;
    secondStep: ContractingStep;
    thirdStep: ContractingStep;
}) {
    const targetRef = useRef<HTMLDivElement>(null);
    const [animate, setAnimate] = useState<boolean>(false);

    useEffect(() => {
        if (targetRef.current) {
            const target = targetRef.current;
            const handler = () => {
                const rect = target.getBoundingClientRect();
                if (rect.top < (window.innerHeight * 0.5) && rect.bottom > 0 && !animate) {
                    setAnimate(true);
                }
            };
            document.addEventListener("scroll", handler);
            return () => document.removeEventListener("scroll", handler);
        }
    }, [targetRef.current]);

    const trailingArrow = <>
        <div className={`hidden md:flex absolute left-[100%] z-10 overflow-hidden ${animate ? "w-[38px] animate-[arrow-out_0.8s_ease-out]" : "w-[0px]"} justify-end`}>
            <div>
                <svg width="38" height="60">
                    <polygon points="2.5,2.5 2.5,55.5 32.5,29"
                        fill={innerColor}
                        strokeWidth="5"
                        strokeLinejoin="round"
                        stroke={innerColor} />
                </svg>
            </div>
        </div>
        <div className={`absolute md:hidden top-[100%] z-10 overflow-hidden ${animate ? "h-[38px] animate-[arrow-out-down_0.8s_ease-out]" : "h-[0px]"} flex flex-col justify-end`}>
            <div>
                <svg width="60" height="38">
                    <polygon points="2.5,2.5 55.5,2.5 29,33.5"
                        fill={innerColor}
                        strokeWidth="5"
                        strokeLinejoin="round"
                        stroke={innerColor} />
                </svg>
            </div>
        </div>
    </>;

    return (
        <div ref={targetRef} className={`text-center`}
            style={{
                backgroundColor: outerColor,
                color: textColor
            }}>
            <div className='case-responsive-container py-[80px]'>
                <div className='mb-[36px] text-3xl font-medium'>{heading}</div>
                <div className='flex flex-col md:flex-row gap-y-8'>
                    {[firstStep, secondStep, thirdStep].map((step, i) => {
                        const notLastItem = i !== 2;
                        const borderRadiusClasses = "rounded-b-[36px] rounded-tr-none md:rounded-bl-none md:rounded-r-[36px]";
                        const content = <div className={`${notLastItem ? ("relative w-full " + borderRadiusClasses) : "w-full md:w-1/3"} h-full px-[36px] md:px-[48px] py-[48px] md:py-[36px] flex flex-col justify-center items-center`}
                            style={{ backgroundColor: outerColor }}>
                            <div className='mb-[24px] mx-auto w-min'>
                                {step.icon}
                            </div>
                            <div>
                                <h3 className="mb-[12px] text-2xl font-medium">{step.title}</h3>
                                <p style={{ color: descriptionTextColor }}>{step.description}</p>
                            </div>
                            {notLastItem && trailingArrow}
                        </div>;

                        return <Fragment key={i}>
                            {notLastItem ? (
                                <div className={`${borderRadiusClasses} w-full md:w-1/3 ${animate ? "pb-[6px] md:pb-0 md:pr-[6px] animate-[box-out-down_0.8s_ease-out] md:animate-[box-out_0.8s_ease-out]" : ""}`}
                                    style={{ backgroundColor: innerColor }}>
                                    {content}
                                </div>
                            ) : content}
                        </Fragment>;
                    })}
                </div>
            </div>
        </div>
    )
};

const innerColor = "var(--primary-200)";

const props = {
    outerColor: "var(--primary-800)",
    innerColor,
    textColor: "white",
    descriptionTextColor: "var(--primary-200)",
    heading: "Contracting? It's a breeeeeze!!!",
    firstStep: {
        icon: <svg width="60" height="44" viewBox="0 0 60 44" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M52.5372 0.267792H7.46281C5.64336 0.270015 3.89907 0.993771 2.61253 2.28031C1.32599 3.56686 0.602229 5.31115 0.600006 7.13059V39.535C0.600562 40.3717 0.851001 41.1891 1.31921 41.8825C1.78743 42.5759 2.45207 43.1137 3.22793 43.4269C4.0038 43.7401 4.85552 43.8144 5.67389 43.6403C6.49226 43.4662 7.23999 43.0516 7.82121 42.4498L10.9404 39.2186C11.7372 38.3958 12.6909 37.7411 13.7451 37.2934C14.7993 36.8456 15.9326 36.6139 17.078 36.6118H52.5372C54.3566 36.6096 56.1009 35.8858 57.3875 34.5993C58.674 33.3127 59.3978 31.5684 59.4 29.749V7.13059C59.3978 5.31115 58.674 3.56686 57.3875 2.28031C56.1009 0.993771 54.3566 0.270015 52.5372 0.267792ZM56.6 29.749C56.5993 30.8263 56.171 31.8592 55.4092 32.621C54.6475 33.3828 53.6145 33.811 52.5372 33.8118H17.078C15.5575 33.8147 14.053 34.1225 12.6535 34.7169C11.254 35.3114 9.98785 36.1804 8.93001 37.2726L5.80801 40.5066C5.61432 40.7075 5.365 40.846 5.09205 40.9042C4.8191 40.9624 4.53497 40.9378 4.27616 40.8333C4.01734 40.7289 3.79564 40.5495 3.63952 40.3181C3.48341 40.0868 3.4 39.8141 3.40001 39.535V7.13059C3.40149 6.05353 3.83001 5.021 4.59161 4.25939C5.35321 3.49779 6.38574 3.06927 7.46281 3.06779H52.5428C53.6189 3.07075 54.65 3.49993 55.4104 4.26137C56.1708 5.02281 56.5985 6.05449 56.6 7.13059V29.749Z" fill={innerColor} />
            <path d="M17.3804 17.149C16.8377 17.149 16.3072 17.3099 15.8559 17.6114C15.4047 17.9129 15.053 18.3415 14.8453 18.8429C14.6376 19.3443 14.5833 19.896 14.6891 20.4283C14.795 20.9606 15.0564 21.4495 15.4401 21.8333C15.8239 22.217 16.3128 22.4784 16.8451 22.5843C17.3774 22.6901 17.9291 22.6358 18.4305 22.4281C18.9319 22.2204 19.3605 21.8687 19.662 21.4175C19.9635 20.9662 20.1244 20.4357 20.1244 19.893C20.1244 19.1652 19.8353 18.4673 19.3207 17.9527C18.8061 17.4381 18.1082 17.149 17.3804 17.149ZM30.0252 17.149C29.4824 17.1484 28.9516 17.3089 28.5 17.6101C28.0484 17.9112 27.6962 18.3396 27.4881 18.841C27.28 19.3423 27.2252 19.8941 27.3308 20.4266C27.4364 20.9591 27.6975 21.4483 28.0811 21.8323C28.4648 22.2163 28.9537 22.4779 29.4861 22.5841C30.0184 22.6902 30.5703 22.636 31.0719 22.4284C31.5734 22.2208 32.0021 21.8691 32.3038 21.4178C32.6054 20.9665 32.7664 20.4358 32.7664 19.893C32.7664 19.1657 32.4777 18.4682 31.9637 17.9537C31.4497 17.4392 30.7525 17.1497 30.0252 17.149ZM42.67 17.149C42.1272 17.1484 41.5964 17.3089 41.1448 17.6101C40.6932 17.9112 40.341 18.3396 40.1329 18.841C39.9248 19.3423 39.87 19.8941 39.9756 20.4266C40.0812 20.9591 40.3423 21.4483 40.7259 21.8323C41.1096 22.2163 41.5985 22.4779 42.1309 22.5841C42.6632 22.6902 43.2151 22.636 43.7167 22.4284C44.2182 22.2208 44.6469 21.8691 44.9486 21.4178C45.2502 20.9665 45.4112 20.4358 45.4112 19.893C45.4112 19.1657 45.1225 18.4682 44.6085 17.9537C44.0945 17.4392 43.3973 17.1497 42.67 17.149Z" fill={innerColor} />
        </svg>,
        title: "Talk to our Expert",
        description: "Talk to our Subject Matter Expert One of our senior architects will work with you to understand your project goals."
    },
    secondStep: {
        icon: <svg width="60" height="42" viewBox="0 0 60 42" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M19.7916 21C25.4318 21 30 16.4318 30 10.7917C30 5.15156 25.4318 0.583328 19.7916 0.583328C14.1515 0.583328 9.58331 5.15156 9.58331 10.7917C9.58331 16.4318 14.1515 21 19.7916 21ZM27.0833 10.7917C27.0833 14.8209 23.8209 18.0833 19.7916 18.0833C15.7624 18.0833 12.5 14.8209 12.5 10.7917C12.5 6.76243 15.7624 3.5 19.7916 3.5C23.8209 3.5 27.0833 6.76243 27.0833 10.7917ZM0.833313 41.4167V33.25C0.833313 27.0433 13.4642 23.9167 19.7916 23.9167C24.0007 23.9167 30.9991 25.3002 35.2134 28.0537C38.2171 27.2414 41.5115 26.8333 43.8542 26.8333C46.5636 26.8333 50.1994 27.379 53.2009 28.4823C54.6989 29.0331 56.1317 29.7558 57.2157 30.6925C58.3074 31.6358 59.1667 32.9111 59.1667 34.5139V41.4167H0.833313ZM3.74998 33.25C3.74998 32.7871 3.96225 32.1542 4.86733 31.3317C5.79031 30.493 7.21093 29.6787 9.00993 28.9691C12.6108 27.5488 16.9867 26.8333 19.7916 26.8333C22.5966 26.8333 26.9725 27.5488 30.5734 28.9691C32.3724 29.6787 33.793 30.493 34.7159 31.3317C35.621 32.1542 35.8333 32.7871 35.8333 33.25V38.5H3.74998V33.25ZM37.8067 30.4343C40.0125 29.9782 42.2258 29.75 43.8542 29.75C46.2553 29.75 49.5466 30.2466 52.1945 31.2199C53.5212 31.7075 54.5938 32.2817 55.3088 32.8996C56.0164 33.5109 56.25 34.0477 56.25 34.5139V38.5H38.75V33.25C38.75 32.2279 38.4074 31.2891 37.8067 30.4343ZM51.875 15.8958C51.875 20.3273 48.2856 23.9167 43.8542 23.9167C39.4227 23.9167 35.8333 20.3273 35.8333 15.8958C35.8333 11.4642 39.4227 7.875 43.8542 7.875C48.2856 7.875 51.875 11.4642 51.875 15.8958ZM43.8542 21C46.6749 21 48.9583 18.7165 48.9583 15.8958C48.9583 13.0751 46.6749 10.7917 43.8542 10.7917C41.0334 10.7917 38.75 13.0751 38.75 15.8958C38.75 18.7165 41.0334 21 43.8542 21Z" fill={innerColor} />
        </svg>,
        title: "Meet the Candidates",
        description: "We Share the Profiles We line-up the profiles of candidates matching your project goals."
    },
    thirdStep: {
        icon: <svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.52652 28.4952C1.57823 28.5019 1.6303 28.5055 1.68245 28.5059C1.94574 28.5057 2.20013 28.4105 2.39889 28.2379C2.59766 28.0652 2.72746 27.8266 2.76445 27.5659C3.3973 23.1797 5.00856 18.9919 7.47895 15.3127C9.94935 11.6335 13.2156 8.55697 17.0359 6.31095C20.8563 4.06493 25.1329 2.7069 29.5491 2.3374C33.9653 1.9679 38.4081 2.59639 42.5486 4.17635C42.8199 4.27946 43.1212 4.27054 43.386 4.15155C43.6508 4.03257 43.8575 3.81326 43.9606 3.54187C44.0637 3.27049 44.0548 2.96926 43.9358 2.70445C43.8168 2.43964 43.5975 2.23294 43.3261 2.12983C38.8787 0.434106 34.1068 -0.239774 29.3637 0.158066C24.6206 0.555907 20.0276 2.01528 15.9248 4.42818C11.8219 6.84109 8.31423 10.1457 5.66124 14.0976C3.00825 18.0494 1.27791 22.5473 0.598278 27.2583C0.577957 27.4005 0.585852 27.5452 0.62151 27.6844C0.657169 27.8235 0.719893 27.9542 0.806098 28.0691C0.892302 28.184 1.0003 28.2807 1.12391 28.3538C1.24753 28.4269 1.38433 28.475 1.52652 28.4952ZM62.4037 22.7017C62.3629 22.5637 62.2951 22.4352 62.2045 22.3234C62.1138 22.2116 62.0019 22.1188 61.8753 22.0503C61.7487 21.9819 61.6099 21.9391 61.4667 21.9244C61.3235 21.9097 61.1788 21.9234 61.0409 21.9647C60.9031 22.006 60.7747 22.0741 60.6632 22.1652C60.5517 22.2562 60.4593 22.3683 60.3912 22.4951C60.3231 22.6219 60.2807 22.7609 60.2665 22.9042C60.2522 23.0474 60.2664 23.192 60.3081 23.3298C61.7911 28.316 61.928 33.6059 60.7049 38.6622C59.4818 43.7185 56.9423 48.361 53.3444 52.1182C49.1414 48.2587 43.9713 45.6098 38.3834 44.4532C41.2434 43.0163 43.5349 40.6564 44.8872 37.7555C46.2395 34.8545 46.5735 31.5821 45.8351 28.4677C45.0967 25.3534 43.3292 22.5793 40.8184 20.5942C38.3077 18.6091 35.2006 17.5292 31.9999 17.5292C28.7992 17.5292 25.6922 18.6091 23.1814 20.5942C20.6707 22.5793 18.9031 25.3534 18.1647 28.4677C17.4263 31.5821 17.7603 34.8545 19.1126 37.7555C20.4649 40.6564 22.7564 43.0163 25.6164 44.4532C20.0306 45.6095 14.8622 48.2569 10.66 52.1143C6.40315 47.6903 3.64163 42.0422 2.76445 35.9657C2.72366 35.6785 2.57042 35.4192 2.33846 35.2449C2.1065 35.0707 1.81482 34.9957 1.52757 35.0365C1.24032 35.0773 0.981049 35.2305 0.806781 35.4625C0.632512 35.6944 0.557528 35.9861 0.598322 36.2734C1.22139 40.5888 2.72739 44.7295 5.02231 48.4369C7.31723 52.1444 10.3518 55.3389 13.9365 57.8211C17.5213 60.3032 21.5792 62.0198 25.857 62.8635C30.1348 63.7073 34.5406 63.6601 38.7994 62.7249C43.0582 61.7898 47.0784 59.9867 50.6092 57.4283C54.1399 54.87 57.1054 51.6112 59.3204 47.8555C61.5354 44.0998 62.9524 39.9278 63.4829 35.6C64.0134 31.2721 63.646 26.8812 62.4037 22.7017ZM19.9686 31.7657C19.9686 29.3862 20.6742 27.0601 21.9962 25.0815C23.3182 23.103 25.1973 21.5609 27.3957 20.6503C29.5941 19.7397 32.0132 19.5015 34.347 19.9657C36.6809 20.4299 38.8246 21.5758 40.5072 23.2584C42.1898 24.941 43.3357 27.0847 43.7999 29.4186C44.2641 31.7524 44.0259 34.1715 43.1153 36.3699C42.2046 38.5683 40.6626 40.4474 38.684 41.7694C36.7055 43.0914 34.3794 43.797 31.9998 43.797C28.8101 43.7932 25.7521 42.5244 23.4966 40.2689C21.2412 38.0135 19.9724 34.9555 19.9686 31.7657ZM12.2398 53.6317C17.6463 48.7099 24.695 45.9829 32.0062 45.9845C39.3174 45.9861 46.3649 48.716 51.7693 53.6401C46.3657 58.5677 39.316 61.2986 32.003 61.297C24.6899 61.2954 17.6414 58.5616 12.2398 53.6317Z" fill={innerColor} />
            <path d="M43.0806 7.42762C43.0177 7.62178 43.0102 7.82964 43.0591 8.02779C43.108 8.22594 43.2112 8.40651 43.3572 8.54915L47.572 12.6551L46.5765 18.4548C46.5495 18.6118 46.5571 18.7729 46.5988 18.9267C46.6405 19.0805 46.7153 19.2233 46.8179 19.3451C46.9206 19.467 47.0486 19.565 47.193 19.6323C47.3375 19.6995 47.4949 19.7344 47.6542 19.7345C47.8315 19.7351 48.0062 19.6918 48.1626 19.6085L53.3729 16.8697L58.5821 19.6085C58.7628 19.7034 58.9664 19.746 59.17 19.7312C59.3736 19.7165 59.569 19.645 59.734 19.525C59.8991 19.4049 60.0273 19.241 60.104 19.0519C60.1808 18.8628 60.2031 18.6559 60.1684 18.4548L59.1739 12.6549L63.3887 8.54911C63.5349 8.40648 63.6382 8.22583 63.687 8.02758C63.7359 7.82932 63.7284 7.62135 63.6653 7.42715C63.6022 7.23296 63.486 7.06028 63.33 6.92861C63.1739 6.79694 62.9841 6.71154 62.7821 6.68204L56.9587 5.83608L54.3534 0.557559C54.2523 0.387623 54.1088 0.246881 53.9369 0.149137C53.765 0.0513919 53.5707 0 53.3729 0C53.1752 0 52.9808 0.0513919 52.8089 0.149137C52.637 0.246881 52.4935 0.387623 52.3924 0.557559L49.7873 5.83617L43.9639 6.68212C43.7617 6.71132 43.5717 6.79666 43.4155 6.92845C43.2594 7.06023 43.1433 7.23317 43.0806 7.42762ZM50.6706 7.91896C50.846 7.89323 51.0125 7.82537 51.1559 7.7212C51.2993 7.61704 51.4154 7.47965 51.4941 7.32083L53.3729 3.51418L55.2517 7.32096C55.3304 7.47979 55.4465 7.61717 55.5899 7.72134C55.7333 7.82551 55.8999 7.89336 56.0752 7.91909L60.274 8.52791L57.2352 11.4887C57.1083 11.6128 57.0134 11.7659 56.9587 11.9349C56.904 12.1038 56.8911 12.2835 56.9212 12.4585L57.6379 16.6412L53.8813 14.6674C53.7244 14.5853 53.55 14.5424 53.3729 14.5424C53.1958 14.5424 53.0214 14.5853 52.8645 14.6674L49.1069 16.6412L49.8246 12.4585C49.8547 12.2835 49.8419 12.1038 49.7872 11.9349C49.7325 11.7659 49.6376 11.6128 49.5106 11.4887L46.4718 8.52793L50.6706 7.91896Z" fill={innerColor} />
            <path d="M1.37488 32.8595C1.97894 32.8595 2.46863 32.3698 2.46863 31.7657C2.46863 31.1617 1.97894 30.672 1.37488 30.672C0.770816 30.672 0.281128 31.1617 0.281128 31.7657C0.281128 32.3698 0.770816 32.8595 1.37488 32.8595Z" fill={innerColor} />
        </svg>,
        title: "Trial Period Starts in 5 Days",
        description: "The Trial Period Starts in 5 days, no risk - trial period starts. Beyond doubt!"
    }
};

export default () => <ContractingSteps {...props} />;
